{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "DEMO-HUB-DEV-ETL"
		},
		"LS_ASQL_connectionString": {
			"type": "secureString",
			"metadata": "Secure string for 'connectionString' of 'LS_ASQL'",
			"defaultValue": "Integrated Security=False;Encrypt=True;Connection Timeout=30;Data Source=demo-asql-dev-etl.database.windows.net;Initial Catalog=DEMO-ASQL-DEV-ETL"
		},
		"LS_KV_properties_typeProperties_baseUrl": {
			"type": "string",
			"defaultValue": "https://AZDEV-KV.vault.azure.net/"
		},
		"LS_ABLB_DP_properties_typeProperties_sasUri_secretName": {
			"type": "string",
			"defaultValue": "ABLB-DP-SAS"
		},
		"ABLB_ETL_MANAGED_ENDPOINT_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/842dbd11-70de-4377-9182-6377137563f7/resourceGroups/DEMO-RG-DEV-MAIN/providers/Microsoft.Storage/storageAccounts/demostoredevetl"
		},
		"ABLB_ETL_MANAGED_ENDPOINT_properties_groupId": {
			"type": "string",
			"defaultValue": "blob"
		},
		"ABLB_ETL_MANAGED_ENDPOINT_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"demostoredevetl.blob.core.windows.net"
			]
		},
		"ASQL_ETL_MANAGED_ENDPOINT_properties_privateLinkResourceId": {
			"type": "string",
			"defaultValue": "/subscriptions/842dbd11-70de-4377-9182-6377137563f7/resourceGroups/DEMO-RG-DEV-MAIN/providers/Microsoft.Sql/servers/demo-asql-dev-etl"
		},
		"ASQL_ETL_MANAGED_ENDPOINT_properties_groupId": {
			"type": "string",
			"defaultValue": "sqlServer"
		},
		"ASQL_ETL_MANAGED_ENDPOINT_properties_fqdns": {
			"type": "array",
			"defaultValue": [
				"demo-asql-dev-etl.database.windows.net"
			]
		},
		"LS_ABLB_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://demostoredevetl.blob.core.windows.net/"
		},
		"LS_ABLB_DATAPLAT_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://demostoredevetl.blob.core.windows.net/"
		},
		"LS_ABLB_SFTP_properties_typeProperties_serviceEndpoint": {
			"type": "string",
			"defaultValue": "https://demostoredevetl.blob.core.windows.net/"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/LS_KV')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureKeyVault",
				"typeProperties": {
					"baseUrl": "[parameters('LS_KV_properties_typeProperties_baseUrl')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/default')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks",
			"apiVersion": "2018-06-01",
			"properties": {},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_DP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Data Platform Storage Account as sink/destination ",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"sasUri": {
						"type": "AzureKeyVaultSecret",
						"store": {
							"referenceName": "LS_KV",
							"type": "LinkedServiceReference"
						},
						"secretName": "[parameters('LS_ABLB_DP_properties_typeProperties_sasUri_secretName')]"
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_KV')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ManagedIR')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "UK South",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60,
							"numberOfPipelineNodes": 1,
							"numberOfExternalNodes": 1
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ManagedRuntime')]",
			"type": "Microsoft.DataFactory/factories/integrationRuntimes",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "Managed",
				"typeProperties": {
					"computeProperties": {
						"location": "UK South",
						"dataFlowProperties": {
							"computeType": "General",
							"coreCount": 8,
							"timeToLive": 10,
							"cleanup": false,
							"customProperties": []
						},
						"pipelineExternalComputeScaleProperties": {
							"timeToLive": 60
						}
					}
				},
				"managedVirtualNetwork": {
					"type": "ManagedVirtualNetworkReference",
					"referenceName": "default"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/ABLB_ETL_MANAGED_ENDPOINT')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('ABLB_ETL_MANAGED_ENDPOINT_properties_privateLinkResourceId')]",
				"groupId": "[parameters('ABLB_ETL_MANAGED_ENDPOINT_properties_groupId')]",
				"fqdns": "[parameters('ABLB_ETL_MANAGED_ENDPOINT_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/default/ASQL_ETL_MANAGED_ENDPOINT')]",
			"type": "Microsoft.DataFactory/factories/managedVirtualNetworks/managedPrivateEndpoints",
			"apiVersion": "2018-06-01",
			"properties": {
				"privateLinkResourceId": "[parameters('ASQL_ETL_MANAGED_ENDPOINT_properties_privateLinkResourceId')]",
				"groupId": "[parameters('ASQL_ETL_MANAGED_ENDPOINT_properties_groupId')]",
				"fqdns": "[parameters('ASQL_ETL_MANAGED_ENDPOINT_properties_fqdns')]"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/managedVirtualNetworks/default')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Azure Blob Storage/Azure Data Lake Gen2 connection",
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('LS_ABLB_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "ManagedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_DATAPLAT')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('LS_ABLB_DATAPLAT_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "ManagedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ABLB_SFTP')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobStorage",
				"typeProperties": {
					"serviceEndpoint": "[parameters('LS_ABLB_SFTP_properties_typeProperties_serviceEndpoint')]",
					"accountKind": "StorageV2"
				},
				"connectVia": {
					"referenceName": "ManagedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/LS_ASQL')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureSqlDatabase",
				"typeProperties": {
					"connectionString": "[parameters('LS_ASQL_connectionString')]"
				},
				"connectVia": {
					"referenceName": "ManagedRuntime",
					"type": "IntegrationRuntimeReference"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/integrationRuntimes/ManagedRuntime')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OB003')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Clear Down - OB3",
						"description": "Cleansing data from different tables",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[stage].[usp_Clean_Down_OB3]"
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL",
							"type": "LinkedServiceReference"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-06T20:28:33Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLB')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "moviesDB.csv",
						"container": "bo001"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLB_DP_OUT')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_DATAPLAT",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File_Name": {
						"type": "string"
					},
					"Folder_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File_Name",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Folder_Name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_DATAPLAT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ABLB_SFTP')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ABLB_SFTP",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"File_Name": {
						"type": "string"
					},
					"Folder_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": {
							"value": "@dataset().File_Name",
							"type": "Expression"
						},
						"container": {
							"value": "@dataset().Folder_Name",
							"type": "Expression"
						}
					},
					"columnDelimiter": "|",
					"escapeChar": "\\",
					"firstRowAsHeader": false,
					"quoteChar": ""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ABLB_SFTP')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DS_ASQL')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "LS_ASQL",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [
					{
						"name": "account_history_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "account_history_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "customer_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "tbs_customer_id",
						"type": "varchar"
					},
					{
						"name": "market_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "days_account_open",
						"type": "int",
						"precision": 10
					},
					{
						"name": "date_of_birth",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "email",
						"type": "varchar"
					},
					{
						"name": "end_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "start_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "account_status_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "status_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					},
					{
						"name": "tier_id",
						"type": "int",
						"precision": 10
					},
					{
						"name": "tier_change_date",
						"type": "datetime",
						"precision": 23,
						"scale": 3
					}
				],
				"typeProperties": {
					"schema": "Customer",
					"table": "Account_ID_History"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/MOVE001')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy data",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "DS_ABLB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DS_ASQL",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"annotations": [],
				"lastPublishTime": "2023-08-29T21:05:10Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ABLB')]",
				"[concat(variables('factoryId'), '/datasets/DS_ASQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OB001')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline run and execute SPs .",
				"activities": [
					{
						"name": "Retrieve Config for OB001",
						"description": "Retrieving config info for OB001 to execute sps",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM stage.ADF_Config where Spec_Code = '@{pipeline().parameters.speccode}' ",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL",
							"type": "LinkedServiceReference"
						},
						"outputs": [
							{
								"name": "Configuration"
							}
						]
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Retrieve Config for OB001",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Retrieve Config for OB001').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "If Condition1",
									"type": "IfCondition",
									"dependsOn": [
										{
											"activity": "Get Source Name",
											"dependencyConditions": [
												"Succeeded"
											]
										},
										{
											"activity": "Set variable1",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"userProperties": [],
									"typeProperties": {
										"expression": {
											"value": "@equals(item().Operation,'upsert')",
											"type": "Expression"
										},
										"ifFalseActivities": [
											{
												"name": "OB1001 Execute SQL",
												"type": "Script",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"linkedServiceName": {
													"referenceName": "LS_ASQL",
													"type": "LinkedServiceReference"
												},
												"typeProperties": {
													"scripts": [
														{
															"type": "NonQuery",
															"text": {
																"value": "update @{variables('Source_Name')}  \n set status = 'Expired' \n where @{variables('Where_Condition')}            \n ",
																"type": "Expression"
															}
														}
													],
													"scriptBlockExecutionTimeout": "02:00:00"
												}
											}
										],
										"ifTrueActivities": [
											{
												"name": "Stored procedure",
												"type": "SqlServerStoredProcedure",
												"dependsOn": [],
												"policy": {
													"timeout": "0.12:00:00",
													"retry": 0,
													"retryIntervalInSeconds": 30,
													"secureOutput": false,
													"secureInput": false
												},
												"userProperties": [],
												"typeProperties": {
													"storedProcedureName": {
														"value": "@variables('Source_Name')",
														"type": "Expression"
													}
												},
												"linkedServiceName": {
													"referenceName": "LS_ASQL",
													"type": "LinkedServiceReference"
												}
											}
										]
									}
								},
								{
									"name": "Get Source Name",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Source_Name",
										"value": {
											"value": "@item().Source_Name",
											"type": "Expression"
										}
									}
								},
								{
									"name": "Set variable1",
									"type": "SetVariable",
									"dependsOn": [],
									"policy": {
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"variableName": "Where_Condition",
										"value": {
											"value": "@item().Where_Condition",
											"type": "Expression"
										}
									}
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"speccode": {
						"type": "String",
						"defaultValue": "OB001"
					}
				},
				"variables": {
					"Source_Name": {
						"type": "String"
					},
					"Where_Condition": {
						"type": "String"
					}
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-06T20:28:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OB001_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This pipeline extracts data for Data Platform.",
				"activities": [
					{
						"name": "Retrieve Config for DP001",
						"description": "Retrieving config info for DP001 to extract data platform for Reporting",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "SELECT * FROM stage.ADF_Config where Spec_Code = '@{pipeline().parameters.speccode}' and Operation ='full'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL",
							"type": "LinkedServiceReference"
						},
						"outputs": [
							{
								"name": "Configuration"
							}
						]
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Retrieve Config for DP001",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "TimeStampt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Retrieve Config for DP001').output.value",
								"type": "Expression"
							},
							"isSequential": false,
							"batchCount": 3,
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "Select * from @{item().Source_Name}",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ABLB_DP_OUT",
											"type": "DatasetReference",
											"parameters": {
												"File_Name": {
													"value": "@concat(item().Target_Name,'_',variables('TimeStamp'),item().Target_File_Extention)",
													"type": "Expression"
												},
												"Folder_Name": {
													"value": "@item().Directory",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					},
					{
						"name": "TimeStampt",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TimeStamp",
							"value": {
								"value": "@substring(replace(replace(replace(pipeline().TriggerTime,'-',''),':',''),'T',''),0,15)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"speccode": {
						"type": "String",
						"defaultValue": "DP001"
					}
				},
				"variables": {
					"TimeStamp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-06T20:28:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLB_DP_OUT')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/OB004_CHILD_DELTA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Retrieve Config for OB4001",
						"description": "Retrieving config info for OB4001 to extract data for Data Platform",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"retry": 3,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": {
									"value": "select \nac.*,\nSpec_Code_Id,\n    Min_Window_Start_Value\nfrom [stage].[ADF_Config] ac  join [stage].[ADF_Delta_Pipelines_Detail] dpd\non ac.id = dpd.Spec_Code_Id\nwhere ac.Spec_Code = '@{pipeline().parameters.speccode}' and ac.Operation ='delta'",
									"type": "Expression"
								},
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "DS_ASQL",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						},
						"linkedServiceName": {
							"referenceName": "LS_ASQL",
							"type": "LinkedServiceReference"
						},
						"outputs": [
							{
								"name": "Configuration"
							}
						]
					},
					{
						"name": "ForEach Table",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Retrieve Config for OB4001",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "TimeStampt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Retrieve Config for OB4001').output.value",
								"type": "Expression"
							},
							"isSequential": true,
							"activities": [
								{
									"name": "Copy data - Delta Load",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "AzureSqlSource",
											"sqlReaderQuery": {
												"value": "@concat('Select * from ', item().Source_Name , ' where ',item().Where_Condition , '>' , item().Min_Window_Start_Value)",
												"type": "Expression"
											},
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobStorageWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".csv"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "DS_ASQL",
											"type": "DatasetReference",
											"parameters": {}
										}
									],
									"outputs": [
										{
											"referenceName": "DS_ABLB_SFTP",
											"type": "DatasetReference",
											"parameters": {
												"File_Name": {
													"value": "@concat(item().Target_Name,'_',variables('TimeStamp'),item().Target_File_Extention)\n",
													"type": "Expression"
												},
												"Folder_Name": {
													"value": "@item().Directory",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "Update Max Record Id",
									"description": "This task will update table for delta load.\nIt set max id from table and update to config table Min Window Start value for Delta Load Next time.",
									"type": "Script",
									"dependsOn": [
										{
											"activity": "Copy data - Delta Load",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"linkedServiceName": {
										"referenceName": "LS_ASQL",
										"type": "LinkedServiceReference"
									},
									"typeProperties": {
										"scripts": [
											{
												"type": "Query",
												"text": {
													"value": "update  [stage].[ADF_Delta_Pipelines_Detail]\nset Min_Window_Start_Value = (\nselect CASE WHEN  (max (@{item().Where_Condition})>0) THEN max (@{item().Where_Condition}) ELSE 0 END from @{item().Source_Name}),\nLast_Processed_Timestamp = getdate()\nwhere Spec_Code_Id = @{item().Spec_Code_Id}",
													"type": "Expression"
												}
											}
										],
										"scriptBlockExecutionTimeout": "02:00:00"
									}
								}
							]
						}
					},
					{
						"name": "TimeStampt",
						"type": "SetVariable",
						"dependsOn": [],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "TimeStamp",
							"value": {
								"value": "@substring(replace(replace(replace(pipeline().TriggerTime,'-',''),':',''),'T',''),0,15)",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"parameters": {
					"speccode": {
						"type": "String",
						"defaultValue": "OB004"
					}
				},
				"variables": {
					"TimeStamp": {
						"type": "String"
					}
				},
				"folder": {
					"name": "metadata"
				},
				"annotations": [],
				"lastPublishTime": "2023-09-06T20:28:34Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/DS_ASQL')]",
				"[concat(variables('factoryId'), '/datasets/DS_ABLB_SFTP')]",
				"[concat(variables('factoryId'), '/linkedServices/LS_ASQL')]"
			]
		}
	]
}